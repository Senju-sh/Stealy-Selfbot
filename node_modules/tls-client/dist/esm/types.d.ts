type ClientIdentifier = "chrome_103" | "chrome_104" | "chrome_105" | "chrome_106" | "chrome_107" | "chrome_108" | "firefox_102" | "firefox_104" | "firefox_105" | "firefox_106" | "opera_89" | "opera_90" | "opera_91" | "safari_15_6_1" | "safari_16_0" | "safari_ios_15_5" | "safari_ios_15_6" | "safari_ios_16_0";
type SessionConstructorOptions = {
    clientIdentifier?: ClientIdentifier;
    ja3string?: string;
    h2Settings?: object;
    h2SettingsOrder?: string[];
    supportedSignatureAlgorithms?: string[];
    supportedVersions?: string[];
    keyShareCurves?: string[];
    certCompressionAlgo?: string;
    pseudoHeaderOrder?: string[];
    connectionFlow?: number;
    priorityFrames?: string[];
    headerOrder?: string[];
    headerPriority?: object;
    randomTlsExtensionOrder?: boolean;
    forceHttp1?: boolean;
};
interface Params {
    [key: string]: string;
}
interface Headers {
    [key: string]: string | string[];
}
interface Json {
    [key: string]: string;
}
interface Cookies {
    [key: string]: string;
}
interface ExecuteRequestOptions {
    params?: Params;
    data?: object;
    headers?: Headers;
    cookies?: Cookies;
    json?: Json;
    allowRedirects?: boolean;
    insecureSkipVerify?: boolean;
    timeoutSeconds?: number;
    proxy?: string;
}
interface RequestPayload {
    [key: string]: string | number | boolean | object | undefined;
}
interface ResponseHeaders {
    [key: string]: string[];
}
interface ResponseObject {
    id: string;
    sessionId: string;
    status: number;
    target: string;
    body: string;
    headers: ResponseHeaders;
    cookies: Cookies;
}
export { ClientIdentifier, SessionConstructorOptions, ExecuteRequestOptions, Headers, Params, Json, Cookies, RequestPayload, ResponseObject, };
//# sourceMappingURL=types.d.ts.map